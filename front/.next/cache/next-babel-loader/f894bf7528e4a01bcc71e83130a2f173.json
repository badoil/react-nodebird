{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostForm from '../components/postForm';\nimport PostCard from '../components/postCard';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  var dispatch = useDispatch();\n  var countRef = useRef([]);\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts;\n\n  var onScroll = useCallback(function () {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePosts) {\n        var lastId = mainPosts[mainPosts.length - 1].id;\n\n        if (!countRef.current.includes(lastId)) {\n          dispatch({\n            type: LOAD_MAIN_POSTS_REQUEST,\n            lastId: lastId\n          });\n          countRef.current.push(lastId);\n        }\n      }\n    }\n  }, [mainPosts && mainPosts.length, hasMorePosts]);\n  useEffect(function () {\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n  return __jsx(\"div\", null, me ? __jsx(\"div\", null, \"login: \", me.nickname) : __jsx(\"div\", null, \"logout\"), isLoggedIn && __jsx(PostForm, null), mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c\n    });\n  }));\n};\n\nHome.getInitialProps = function _callee(context) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('context:', context);\n          context.store.dispatch({\n            type: LOAD_MAIN_POSTS_REQUEST\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/pages/index.js"],"names":["React","useEffect","useCallback","useRef","useDispatch","useSelector","PostForm","PostCard","LOAD_MAIN_POSTS_REQUEST","Home","dispatch","countRef","state","user","me","isLoggedIn","post","mainPosts","hasMorePosts","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","current","includes","type","push","addEventListener","removeEventListener","nickname","map","c","getInitialProps","context","console","log","store"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,uBAAT,QAAwC,kBAAxC;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,QAAQ,GAAGR,MAAM,CAAC,EAAD,CAAvB;;AAFe,qBAGYE,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHvB;AAAA,MAGPC,EAHO,gBAGPA,EAHO;AAAA,MAGHC,UAHG,gBAGHA,UAHG;;AAAA,sBAIqBV,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACI,IAAV;AAAA,GAAN,CAJhC;AAAA,MAIPC,SAJO,iBAIPA,SAJO;AAAA,MAIIC,YAJJ,iBAIIA,YAJJ;;AAMf,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,YAAM;AAC/B,QAAGkB,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAApG,EAAwG;AACpG,UAAGP,YAAH,EAAgB;AACZ,YAAMQ,MAAM,GAAGT,SAAS,CAACA,SAAS,CAACU,MAAV,GAAiB,CAAlB,CAAT,CAA8BC,EAA7C;;AACA,YAAG,CAACjB,QAAQ,CAACkB,OAAT,CAAiBC,QAAjB,CAA0BJ,MAA1B,CAAJ,EAAsC;AAClChB,UAAAA,QAAQ,CAAC;AACLqB,YAAAA,IAAI,EAAEvB,uBADD;AAELkB,YAAAA,MAAM,EAANA;AAFK,WAAD,CAAR;AAIAf,UAAAA,QAAQ,CAACkB,OAAT,CAAiBG,IAAjB,CAAsBN,MAAtB;AACH;AACJ;AACJ;AACJ,GAb2B,EAazB,CAACT,SAAS,IAAIA,SAAS,CAACU,MAAxB,EAAgCT,YAAhC,CAbyB,CAA5B;AAeAjB,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCd,QAAlC;AACA,WAAO,YAAM;AACTC,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCf,QAArC;AACH,KAFD;AAGH,GALQ,EAKN,CAACF,SAAS,CAACU,MAAX,CALM,CAAT;AAOA,SACI,mBACKb,EAAE,GAAG,8BAAaA,EAAE,CAACqB,QAAhB,CAAH,GAAoC,4BAD3C,EAEMpB,UAAU,IAAI,MAAC,QAAD,OAFpB,EAGQE,SAAS,CAACmB,GAAV,CAAc,UAACC,CAAD,EAAO;AACnB,WACI,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACT,EAAjB;AAAqB,MAAA,IAAI,EAAES;AAA3B,MADJ;AAGH,GAJC,CAHR,CADJ;AAYH,CAxCD;;AA0CA5B,IAAI,CAAC6B,eAAL,GAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,OAAxB;AACAA,UAAAA,OAAO,CAACG,KAAR,CAAchC,QAAd,CAAuB;AACnBqB,YAAAA,IAAI,EAAEvB;AADa,WAAvB;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAOA,eAAeC,IAAf","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PostForm from '../components/postForm';\nimport PostCard from '../components/postCard';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const countRef = useRef([]);\n    const { me, isLoggedIn } = useSelector(state => state.user);\n    const { mainPosts, hasMorePosts } = useSelector(state => state.post);\n\n    const onScroll = useCallback(() => {\n        if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300){\n            if(hasMorePosts){\n                const lastId = mainPosts[mainPosts.length-1].id\n                if(!countRef.current.includes(lastId)){\n                    dispatch({\n                        type: LOAD_MAIN_POSTS_REQUEST,\n                        lastId,\n                    })\n                    countRef.current.push(lastId);\n                }\n            }              \n        }\n    }, [mainPosts && mainPosts.length, hasMorePosts])\n\n    useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n            window.removeEventListener('scroll', onScroll)\n        };\n    }, [mainPosts.length])\n\n    return (\n        <div>\n            {me ? <div>login: {me.nickname}</div>: <div>logout</div>}\n            { isLoggedIn && <PostForm />}\n              { mainPosts.map((c) => {\n                  return(\n                      <PostCard key={c.id} post={c} />\n                  )\n              })\n              }\n        </div>\n    )\n}\n\nHome.getInitialProps = async (context) => {\n    console.log('context:', context);\n    context.store.dispatch({\n        type: LOAD_MAIN_POSTS_REQUEST,\n    })\n}\n\nexport default Home; "]},"metadata":{},"sourceType":"module"}