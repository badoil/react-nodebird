{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE } from '../reducers/post';\n\nfunction* addPost() {\n  try {\n    yield delay(3000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","addPost","type","err","console","error","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,QAAqE,kBAArE;;AAEA,UAAUC,OAAV,GAAmB;AACf,MAAG;AACC,UAAMJ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAEH;AADA,KAAD,CAAT;AAGH,GALD,CAKC,OAAMI,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMP,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAEF,gBADA;AAENK,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUG,YAAV,GAAwB;AACpBX,EAAAA,UAAU,CAACG,gBAAD,EAAmBG,OAAnB,CAAV;AACH;;AAED,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAMd,GAAG,CAAC,CACNC,IAAI,CAACY,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE } from '../reducers/post';\n\nfunction* addPost(){\n    try{\n        yield delay(3000);\n        yield put({\n            type: ADD_POST_SUCCESS,\n        });\n    }catch(err){\n        console.error(err);\n        yield put({\n            type: ADD_POST_FAILURE,\n            error: err,\n        })\n    }\n}\n\nfunction* watchAddPost(){\n    takeLatest(ADD_POST_REQUEST, addPost)\n}\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost)\n    ])\n}"]},"metadata":{},"sourceType":"module"}