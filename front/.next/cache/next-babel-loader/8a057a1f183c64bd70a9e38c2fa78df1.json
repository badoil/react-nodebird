{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Proptypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/postCard';\n\nconst Hashtag = ({\n  tag\n}) => {\n  console.log('tag:', tag);\n  const dispatch = useDispatch();\n  const {\n    mainPosts,\n    hasMore\n  } = useSelector(state => state.post);\n\n  const onScroll = () => {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMore) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onscroll);\n    };\n  }, []);\n  return __jsx(\"div\", null, mainPosts.map(c => __jsx(PostCard, {\n    post: c,\n    key: +c.createdAt\n  })));\n};\n\nHashtag.propTypes = {\n  tag: Proptypes.string.isRequired\n};\n\nHashtag.getInitialProps = async context => {\n  const tag = context.query.tag;\n  console.log('context.query.tag: ', tag);\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: tag\n  });\n  return {\n    tag\n  };\n};\n\nexport default Hashtag;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/pages/hashtag.js"],"names":["React","useEffect","Proptypes","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","PostCard","Hashtag","tag","console","log","dispatch","mainPosts","hasMore","state","post","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","onscroll","map","c","createdAt","propTypes","string","isRequired","getInitialProps","context","query","store"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,0BAAT,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,GAApB;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1C;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAGC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAApG,EAAwG;AACpG,UAAGT,OAAH,EAAW;AACPF,QAAAA,QAAQ,CAAC;AACLY,UAAAA,IAAI,EAAElB,0BADD;AAELmB,UAAAA,MAAM,EAAEZ,SAAS,CAACA,SAAS,CAACa,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAFnC;AAGLC,UAAAA,IAAI,EAAEnB;AAHD,SAAD,CAAR;AAKH;AACJ;AACJ,GAVD;;AAYAP,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCC,QAArC;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAQA,SACI,mBAEQlB,SAAS,CAACmB,GAAV,CAAcC,CAAC,IACX,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,CAAhB;AAAmB,IAAA,GAAG,EAAE,CAACA,CAAC,CAACC;AAA3B,IADJ,CAFR,CADJ;AASH,CAlCD;;AAoCA1B,OAAO,CAAC2B,SAAR,GAAoB;AAChB1B,EAAAA,GAAG,EAAEN,SAAS,CAACiC,MAAV,CAAiBC;AADN,CAApB;;AAIA7B,OAAO,CAAC8B,eAAR,GAA0B,MAAOC,OAAP,IAAmB;AACzC,QAAM9B,GAAG,GAAG8B,OAAO,CAACC,KAAR,CAAc/B,GAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC;AACA8B,EAAAA,OAAO,CAACE,KAAR,CAAc7B,QAAd,CAAuB;AACnBY,IAAAA,IAAI,EAAElB,0BADa;AAEnBsB,IAAAA,IAAI,EAAEnB;AAFa,GAAvB;AAIA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CARD;;AAUA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Proptypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/postCard';\n\nconst Hashtag = ({ tag }) => {\n    console.log('tag:', tag);\n    const dispatch = useDispatch();\n    const { mainPosts, hasMore } = useSelector(state => state.post);\n\n    const onScroll = () => {\n        if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300){\n            if(hasMore){\n                dispatch({\n                    type: LOAD_HASHTAG_POSTS_REQUEST,\n                    lastId: mainPosts[mainPosts.length - 1].id,\n                    data: tag,\n                })\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n            window.removeEventListener('scroll', onscroll);\n        }\n    }, [])\n\n\n    return(\n        <div>\n            {\n                mainPosts.map(c => (\n                    <PostCard post={c} key={+c.createdAt} />\n                ))\n            }\n        </div>\n    )\n}\n\nHashtag.propTypes = {\n    tag: Proptypes.string.isRequired,\n}\n\nHashtag.getInitialProps = async (context) => {\n    const tag = context.query.tag;\n    console.log('context.query.tag: ', tag);\n    context.store.dispatch({\n        type: LOAD_HASHTAG_POSTS_REQUEST,\n        data: tag,\n    })\n    return { tag };\n}\n\nexport default Hashtag;"]},"metadata":{},"sourceType":"module"}