{"ast":null,"code":"import { all, put, call, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/user';\n\nfunction loginAPI(loginData) {\n  return axios.post('/user/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    console.log('result: ', result);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction signupAPI(signUpData) {\n  return axios.post('/user', signUpData);\n}\n\nfunction* signup(action) {\n  try {\n    yield call(signupAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction* logout() {\n  try {\n    yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user', {\n    withCredentials: true\n  });\n}\n\nfunction* loadUser() {\n  try {\n    const result = yield call(loadUserAPI);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchLoadUser)]);\n}","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/sagas/user.js"],"names":["all","put","call","takeLatest","fork","delay","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","loginAPI","loginData","post","withCredentials","login","action","result","data","console","log","type","err","error","watchLogin","signupAPI","signUpData","signup","watchSignup","logoutAPI","logout","watchLogout","loadUserAPI","get","loadUser","watchLoadUser","userSaga"],"mappings":"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","sourcesContent":["import { all, put, call, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios'\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \n        SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, \n        LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n        LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/user';\n\n\nfunction loginAPI(loginData) {\n    return axios.post('/user/login', loginData, {\n        withCredentials: true,\n    });\n}\n\nfunction* login(action){\n    try{\n        const result = yield call(loginAPI, action.data);\n        console.log('result: ', result);\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: result.data,\n        })\n    }catch(err){\n        console.error(err)\n        yield put({\n            type: LOG_IN_FAILURE,\n        })\n    }\n}\n\nfunction* watchLogin(){\n    yield takeLatest(LOG_IN_REQUEST, login)\n    \n}\n\nfunction signupAPI(signUpData){\n    return axios.post('/user', signUpData);\n}\n\nfunction* signup(action){\n    try{\n        yield call(signupAPI, action.data);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        })\n    }catch(err){\n        console.error(err)\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: err,\n        })\n    }\n   \n}\n\nfunction* watchSignup(){\n    yield takeLatest(SIGN_UP_REQUEST, signup)\n}\n\nfunction logoutAPI() {\n    return axios.post('/user/logout', {}, {\n        withCredentials: true,\n    })\n}\n\nfunction* logout(){\n    try{\n        yield call(logoutAPI);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        })\n    }catch(err){\n        console.error(err);\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err,\n        })\n    }\n}\n\nfunction* watchLogout(){\n    yield takeLatest(LOG_OUT_REQUEST, logout)\n}\n\nfunction loadUserAPI(){\n    return axios.get('/user', {\n        withCredentials: true,\n    })\n}\n\nfunction* loadUser(){\n    try{\n        const result = yield call(loadUserAPI);\n        yield put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n        })\n    }catch(err){\n        console.error(err);\n        yield put({\n            type: LOAD_USER_FAILURE,\n            error: err,\n        })\n    }\n}\n\nfunction* watchLoadUser(){\n    yield takeLatest(LOAD_USER_REQUEST, loadUser)\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogin),\n        fork(watchLogout),\n        fork(watchSignup),\n        fork(watchLoadUser),\n    ])\n}"]},"metadata":{},"sourceType":"module"}