{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signup),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignup),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, put, call, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from '../reducers/user';\naxios.defaults.baseURL = 'http://localhost:3306/api/user';\n\nfunction loginAPI(loginData) {\n  return axios.post('/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          console.log('result: ', result);\n          _context.next = 7;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 14;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signupAPI(signUpData) {\n  return axios.post('/', signUpData);\n}\n\nfunction signup(action) {\n  return _regeneratorRuntime.wrap(function signup$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signupAPI, action.data);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignup() {\n  return _regeneratorRuntime.wrap(function watchSignup$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signup);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction logoutAPI() {\n  return axios.post('/logout', {\n    withCredentials: true\n  });\n}\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logoutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(watchLogin), fork(watchLogout), fork(watchSignup)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/sagas/user.js"],"names":["login","watchLogin","signup","watchSignup","logout","watchLogout","userSaga","all","put","call","takeLatest","fork","delay","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","defaults","baseURL","loginAPI","loginData","post","withCredentials","action","data","result","console","log","type","error","signupAPI","signUpData","logoutAPI"],"mappings":";;oDAYUA,K;qDAgBAC,U;qDASAC,M;qDAgBAC,W;qDAUAC,M;qDAcAC,W;qDAIeC,Q;;AAjFzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,cAAzC,EAAyDC,eAAzD,EAA0EC,eAA1E,EAA2FC,eAA3F,EAA4GC,eAA5G,EAA6HC,eAA7H,EAA8IC,eAA9I,QAAqK,kBAArK;AAEAT,KAAK,CAACU,QAAN,CAAeC,OAAf,GAAyB,gCAAzB;;AAEA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AACzB,SAAOb,KAAK,CAACc,IAAN,CAAW,QAAX,EAAqBD,SAArB,EAAgC;AACnCE,IAAAA,eAAe,EAAE;AADkB,GAAhC,CAAP;AAGH;;AAED,SAAU5B,KAAV,CAAgB6B,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMpB,IAAI,CAACgB,QAAD,EAAWI,MAAM,CAACC,IAAlB,CAAV;;AAFvB;AAEcC,UAAAA,MAFd;AAGQC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AAHR;AAIQ,iBAAMvB,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEnB,cADA;AAENe,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFP,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AASQE,UAAAA,OAAO,CAACG,KAAR;AATR;AAUQ,iBAAM3B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAElB;AADA,WAAD,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUf,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMS,UAAU,CAACI,cAAD,EAAiBd,KAAjB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAASoC,SAAT,CAAmBC,UAAnB,EAA8B;AAC1B,SAAOxB,KAAK,CAACc,IAAN,CAAW,GAAX,EAAgBU,UAAhB,CAAP;AACH;;AAED,SAAUnC,MAAV,CAAiB2B,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMpB,IAAI,CAAC2B,SAAD,EAAYP,MAAM,CAACC,IAAnB,CAAV;;AAFR;AAAA;AAGQ,iBAAMtB,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEhB;AADA,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOQc,UAAAA,OAAO,CAACG,KAAR;AAPR;AAQQ,iBAAM3B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEf,eADA;AAENgB,YAAAA,KAAK;AAFC,WAAD,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUhC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMO,UAAU,CAACO,eAAD,EAAkBf,MAAlB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAASoC,SAAT,GAAqB;AACjB,SAAOzB,KAAK,CAACc,IAAN,CAAW,SAAX,EAAsB;AACzBC,IAAAA,eAAe,EAAE;AADQ,GAAtB,CAAP;AAGH;;AAED,SAAUxB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMK,IAAI,CAAC6B,SAAD,CAAV;;AAFR;AAAA;AAGQ,iBAAM9B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEb;AADA,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOQW,UAAAA,OAAO,CAACG,KAAR;AAPR;AAQQ,iBAAM3B,GAAG,CAAC;AACN0B,YAAAA,IAAI,EAAEZ;AADA,WAAD,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUjB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,UAAU,CAACU,eAAD,EAAkBhB,MAAlB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNI,IAAI,CAACV,UAAD,CADE,EAENU,IAAI,CAACN,WAAD,CAFE,EAGNM,IAAI,CAACR,WAAD,CAHE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, call, takeLatest, fork, delay } from 'redux-saga/effects';\nimport axios from 'axios'\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from '../reducers/user';\n\naxios.defaults.baseURL = 'http://localhost:3306/api/user';\n\nfunction loginAPI(loginData) {\n    return axios.post('/login', loginData, {\n        withCredentials: true,\n    });\n}\n\nfunction* login(action){\n    try{\n        const result = yield call(loginAPI, action.data);\n        console.log('result: ', result);\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: result.data,\n        })\n    }catch(err){\n        console.error(err)\n        yield put({\n            type: LOG_IN_FAILURE,\n        })\n    }\n}\n\nfunction* watchLogin(){\n    yield takeLatest(LOG_IN_REQUEST, login)\n    \n}\n\nfunction signupAPI(signUpData){\n    return axios.post('/', signUpData);\n}\n\nfunction* signup(action){\n    try{\n        yield call(signupAPI, action.data);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        })\n    }catch(err){\n        console.error(err)\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: err,\n        })\n    }\n   \n}\n\nfunction* watchSignup(){\n    yield takeLatest(SIGN_UP_REQUEST, signup)\n}\n\nfunction logoutAPI() {\n    return axios.post('/logout', {\n        withCredentials: true,\n    })\n}\n\nfunction* logout(){\n    try{\n        yield call(logoutAPI);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        })\n    }catch(err){\n        console.error(err);\n        yield put({\n            type: LOG_OUT_FAILURE\n        })\n    }\n}\n\nfunction* watchLogout(){\n    yield takeLatest(LOG_OUT_REQUEST, logout)\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogin),\n        fork(watchLogout),\n        fork(watchSignup),\n    ])\n}"]},"metadata":{},"sourceType":"module"}