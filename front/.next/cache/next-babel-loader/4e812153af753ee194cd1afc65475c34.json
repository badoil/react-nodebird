{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { Button, Form, Input } from 'antd';\n\nconst PostCardForm = ({\n  post\n}) => {\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const {\n    isAddingComment,\n    commentAdded\n  } = useSelector(state => state.post);\n  const {\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    setCommentText('');\n  }, [commentAdded === true]);\n  const onSubmitComment = useCallback(e => {\n    e.preventDefault();\n\n    if (!me) {\n      return alert('you need to login');\n    }\n\n    return dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        postId: post.id,\n        content: commentText\n      }\n    });\n  }, [me && me.id, commentText]);\n  const onChangeCommentText = useCallback(e => {\n    setCommentText(e.target.value);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: onSubmitComment\n  }, __jsx(Form.Item, null, __jsx(Input.TextArea, {\n    row: 4,\n    value: commentText,\n    onChange: onChangeCommentText\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isAddingComment\n  }, \"jack\")));\n};\n\nexport default PostCardForm;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/components/postCardForm.js"],"names":["React","useEffect","useState","ADD_COMMENT_REQUEST","Button","Form","Input","PostCardForm","post","commentText","setCommentText","isAddingComment","commentAdded","useSelector","state","me","user","onSubmitComment","useCallback","e","preventDefault","alert","dispatch","type","data","postId","id","content","onChangeCommentText","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC/B,QAAM;AAAA,OAAEC,WAAF;AAAA,OAAeC;AAAf,MAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM;AAAES,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAoCC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACN,IAAhB,CAArD;AACA,QAAM;AAAEO,IAAAA;AAAF,MAASF,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACE,IAAhB,CAA1B;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAFM,EAEJ,CAAEE,YAAY,KAAK,IAAnB,CAFI,CAAT;AAIA,QAAMK,eAAe,GAAGC,WAAW,CAAEC,CAAD,IAAO;AACvCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,CAACL,EAAJ,EAAO;AACL,aAAOM,KAAK,CAAC,mBAAD,CAAZ;AACD;;AACD,WAAOC,QAAQ,CAAC;AACdC,MAAAA,IAAI,EAAEpB,mBADQ;AAEdqB,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEjB,IAAI,CAACkB,EADT;AAEJC,QAAAA,OAAO,EAAElB;AAFL;AAFQ,KAAD,CAAf;AAOD,GAZgC,EAY9B,CAAEM,EAAE,IAAIA,EAAE,CAACW,EAAX,EAAejB,WAAf,CAZ8B,CAAnC;AAcA,QAAMmB,mBAAmB,GAAGV,WAAW,CAAEC,CAAD,IAAO;AAC3CT,IAAAA,cAAc,CAACS,CAAC,CAACU,MAAF,CAASC,KAAV,CAAd;AACD,GAFoC,EAElC,EAFkC,CAAvC;AAGA,SACI,4BACI;AAAM,IAAA,QAAQ,EAAEb;AAAhB,KACI,MAAC,IAAD,CAAM,IAAN,QACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAER,WAA/B;AAA4C,IAAA,QAAQ,EAAEmB;AAAtD,IADJ,CADJ,EAII,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAEjB;AAAlD,YAJJ,CADJ,CADJ;AAUH,CAtCD;;AAwCA,eAAeJ,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { Button, Form, Input } from 'antd';\n\n\nconst PostCardForm = ({ post }) => {\n    const [ commentText, setCommentText ] = useState('');\n\n    const { isAddingComment, commentAdded } = useSelector(state => state.post);\n    const { me } = useSelector(state => state.user);\n\n\n    useEffect(() => {\n        setCommentText('');\n      }, [ commentAdded === true]);\n\n    const onSubmitComment = useCallback((e) => {\n        e.preventDefault();\n        if(!me){\n          return alert('you need to login');\n        }\n        return dispatch({\n          type: ADD_COMMENT_REQUEST,\n          data: {\n            postId: post.id,\n            content: commentText,\n          }\n        })\n      }, [ me && me.id, commentText ])\n\n    const onChangeCommentText = useCallback((e) => {\n        setCommentText(e.target.value);\n      }, [])\n    return(\n        <>\n            <form onSubmit={onSubmitComment} >\n                <Form.Item>\n                    <Input.TextArea row={4} value={commentText} onChange={onChangeCommentText} />\n                </Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" loading={isAddingComment} >jack</Button>\n            </form>\n        </>\n    )   \n}\n\nexport default PostCardForm;"]},"metadata":{},"sourceType":"module"}