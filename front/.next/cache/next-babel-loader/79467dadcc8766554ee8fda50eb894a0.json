{"ast":null,"code":"var _jsxFileName = \"/Users/oil/Desktop/zerocho-react/nodebird/front/components/postForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  useEffect(() => {\n    if (postAdded) {\n      setText('');\n    }\n  }, [postAdded === true]);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n\n    if (!text || !text.trim()) {\n      return alert('no text');\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text.trim()\n      }\n    });\n  }, [text]);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  return __jsx(\"form\", {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"write something\",\n    value: text,\n    onChange: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"image upload\"), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      float: 'right'\n    },\n    loading: isAddingPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"submit\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, imagePaths.map(v => {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      src: 'http://localhost:3065' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }\n    }, \"remove\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/components/postForm.js"],"names":["React","useState","useCallback","useEffect","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","imagePaths","isAddingPost","postAdded","state","post","dispatch","text","setText","onSubmitForm","e","preventDefault","trim","alert","type","data","content","onChangeText","target","value","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\n\nconst PostForm = () => {\n    const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.post);\n    const dispatch = useDispatch();\n    const [ text, setText ] = useState('');\n\n    useEffect(() => {\n        if (postAdded) {\n            setText('');\n          }\n    }, [ postAdded === true ])\n\n    const onSubmitForm = useCallback((e) => {\n        e.preventDefault();\n        if( !text || !text.trim()){\n            return alert('no text');\n        }\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: {\n                content: text.trim( ),\n            },\n        })\n    }, [text]);\n\n    const onChangeText = useCallback((e) => {\n        setText(e.target.value);\n    }, []);\n\n\n    return (\n        <form style={{ margin: '10px 0 20px'}} encType=\"multipart/form-data\" onSubmit={onSubmitForm} >\n                <Input.TextArea maxLength={140} placeholder='write something' value={text} onChange={onChangeText} />\n                <div>\n                    <input type='file' multiple hidden />\n                    <Button>image upload</Button>\n                    <Button type='primary' htmlType='submit' style={{float: 'right'}} loading={isAddingPost} >submit</Button>\n                </div>\n                <div>\n                    { imagePaths.map((v) => {\n                        return(\n                            <div key={v} style={{ display: 'inline-block' }} >\n                                <img  src={'http://localhost:3065'+ v} style={{ width: '200px'}} alt={v} />\n                                <div>\n                                    <Button>remove</Button>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n              </form>\n    )\n};\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}