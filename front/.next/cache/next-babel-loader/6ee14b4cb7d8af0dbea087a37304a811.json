{"ast":null,"code":"import { all, put, call, takeLatest, fork } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE } from '../reducers/user';\n\nfunction loginAPI(loginData) {\n  return axios.post('/user/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction signupAPI(signUpData) {\n  return axios.post('/user', signUpData);\n}\n\nfunction* signup(action) {\n  try {\n    yield call(signupAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction* logout() {\n  try {\n    yield call(logoutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction loadUserAPI(userId) {\n  return axios.get(userId ? `/user/${userId}` : `/user`, {\n    withCredentials: true\n  });\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    console.log('loadUserresult:', result);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n      me: !action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction followUserAPI(postUserId) {\n  return axios.post(`/user/${postUserId}/follow`, {}, {\n    withCredentials: true\n  });\n}\n\nfunction* followUser(action) {\n  try {\n    const result = yield call(followUserAPI, action.data);\n    console.log('followResult: ', result);\n    yield put({\n      type: FOLLOW_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: FOLLOW_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchFollowUser() {\n  yield takeLatest(FOLLOW_USER_REQUEST, followUser);\n}\n\nfunction unfollowUserAPI(postUserId) {\n  return axios.delete(`/user/${postUserId}/follow`);\n}\n\nfunction* unfollowUser(action) {\n  try {\n    const result = yield call(unfollowUserAPI, action.data);\n    yield put({\n      type: UNFOLLOW_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e), yield put({\n      type: UNFOLLOW_USER_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUnfollowUser() {\n  yield takeLatest(UNFOLLOW_USER_REQUEST, unfollowUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchLoadUser), fork(watchFollowUser), fork(watchUnfollowUser)]);\n}","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/sagas/user.js"],"names":["all","put","call","takeLatest","fork","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","loginAPI","loginData","post","withCredentials","login","action","result","data","type","err","console","error","watchLogin","signupAPI","signUpData","signup","watchSignup","logoutAPI","logout","watchLogout","loadUserAPI","userId","get","loadUser","log","me","watchLoadUser","followUserAPI","postUserId","followUser","e","watchFollowUser","unfollowUserAPI","delete","unfollowUser","watchUnfollowUser","userSaga"],"mappings":"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","sourcesContent":["import { all, put, call, takeLatest, fork } from 'redux-saga/effects';\nimport axios from 'axios'\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \n        SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, \n        LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n        LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, \n        FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, \n        UNFOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE } from '../reducers/user';\n\n\nfunction loginAPI(loginData) {\n    return axios.post('/user/login', loginData, {\n        withCredentials: true,\n    });\n}\n\nfunction* login(action){\n    try{\n        const result = yield call(loginAPI, action.data);\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: result.data,\n        })\n    }catch(err){\n        console.error(err)\n        yield put({\n            type: LOG_IN_FAILURE,\n        })\n    }\n}\n\nfunction* watchLogin(){\n    yield takeLatest(LOG_IN_REQUEST, login)\n    \n}\n\nfunction signupAPI(signUpData){\n    return axios.post('/user', signUpData);\n}\n\nfunction* signup(action){\n    try{\n        yield call(signupAPI, action.data);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        })\n    }catch(err){\n        console.error(err)\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: err,\n        })\n    }\n   \n}\n\nfunction* watchSignup(){\n    yield takeLatest(SIGN_UP_REQUEST, signup)\n}\n\nfunction logoutAPI() {\n    return axios.post('/user/logout', {}, {\n        withCredentials: true,\n    })\n}\n\nfunction* logout(){\n    try{\n        yield call(logoutAPI);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        })\n    }catch(err){\n        console.error(err);\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err,\n        })\n    }\n}\n\nfunction* watchLogout(){\n    yield takeLatest(LOG_OUT_REQUEST, logout)\n}\n\nfunction loadUserAPI(userId){\n    return axios.get(userId? `/user/${userId}`: `/user`, {\n        withCredentials: true,\n    })\n}\n\nfunction* loadUser(action){\n    try{\n        const result = yield call(loadUserAPI, action.data);\n        console.log('loadUserresult:', result);\n        yield put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n            me: !action.data,\n        })\n    }catch(err){\n        console.error(err);\n        yield put({\n            type: LOAD_USER_FAILURE,\n            error: err,\n        })\n    }\n}\n\nfunction* watchLoadUser(){\n    yield takeLatest(LOAD_USER_REQUEST, loadUser)\n}\n\nfunction followUserAPI(postUserId){\n    return axios.post(`/user/${postUserId}/follow`, {}, {\n        withCredentials: true,\n    })\n}\n\nfunction* followUser(action){\n    try{\n        const result = yield call(followUserAPI, action.data);\n        console.log('followResult: ', result);\n        yield put({\n            type: FOLLOW_USER_SUCCESS,\n            data: result.data,\n        })\n    }catch(e){\n        console.error(e);\n        yield put({\n            type: FOLLOW_USER_FAILURE,\n            error: e,\n        })\n    }\n}\n\nfunction* watchFollowUser(){\n    yield takeLatest(FOLLOW_USER_REQUEST, followUser);\n}\n\nfunction unfollowUserAPI(postUserId){\n    return axios.delete(`/user/${postUserId}/follow`);\n}\n\nfunction* unfollowUser(action){\n    try{\n        const result = yield call(unfollowUserAPI, action.data);\n        yield put({\n            type: UNFOLLOW_USER_SUCCESS,\n            data: result.data,\n        })\n    }catch(e){\n        console.error(e),\n        yield put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: e,\n        })\n    }\n}\n\nfunction* watchUnfollowUser(){\n    yield takeLatest(UNFOLLOW_USER_REQUEST, unfollowUser);\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogin),\n        fork(watchLogout),\n        fork(watchSignup),\n        fork(watchLoadUser),\n        fork(watchFollowUser),\n        fork(watchUnfollowUser),\n    ])\n}"]},"metadata":{},"sourceType":"module"}