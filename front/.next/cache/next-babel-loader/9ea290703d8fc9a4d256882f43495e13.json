{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  imagePaths: [],\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: 'zero',\n      content: 'cho'\n    }\n  }]\n};\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_DUMMY = 'ADD_DUMMY';\nexport const addPostAction = {\n  type: ADD_POST\n};\nexport const addDummyAction = {\n  type: ADD_DUMMY,\n  data: {\n    userId: 1,\n    content: 'hello redux',\n    user: {\n      nickname: 'oiry'\n    }\n  }\n};\n\nconst PostReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        mainPosts: []\n      });\n\n    case ADD_DUMMY:\n      return _objectSpread({}, state, {\n        mainPosts: [action.data, ...state.mainPosts]\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default PostReducer;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/reducers/post.js"],"names":["initialState","imagePaths","mainPosts","User","id","nickname","content","ADD_POST","ADD_DUMMY","addPostAction","type","addDummyAction","data","userId","user","PostReducer","state","action"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,EADY;AAExBC,EAAAA,SAAS,EAAE,CAAC;AACRC,IAAAA,IAAI,EAAE;AACFC,MAAAA,EAAE,EAAE,CADF;AAEFC,MAAAA,QAAQ,EAAE,MAFR;AAGFC,MAAAA,OAAO,EAAE;AAHP;AADE,GAAD;AAFa,CAArB;AAWP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AAEP,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,IAAI,EAAEH;AADmB,CAAtB;AAGP,OAAO,MAAMI,cAAc,GAAG;AAC1BD,EAAAA,IAAI,EAAEF,SADoB;AAE1BI,EAAAA,IAAI,EAAC;AACDC,IAAAA,MAAM,EAAE,CADP;AAEDP,IAAAA,OAAO,EAAE,aAFR;AAGDQ,IAAAA,IAAI,EAAE;AACFT,MAAAA,QAAQ,EAAE;AADR;AAHL;AAFqB,CAAvB;;AAWP,MAAMU,WAAW,GAAG,CAACC,KAAK,GAAChB,YAAP,EAAqBiB,MAArB,KAAgC;AAChD,UAAOA,MAAM,CAACP,IAAd;AACI,SAAKH,QAAL;AACI,+BACOS,KADP;AAEId,QAAAA,SAAS,EAAE;AAFf;;AAIJ,SAAKM,SAAL;AACI,+BACOQ,KADP;AAEId,QAAAA,SAAS,EAAC,CAACe,MAAM,CAACL,IAAR,EAAc,GAAGI,KAAK,CAACd,SAAvB;AAFd;;AAKJ;AACI,+BACOc,KADP;AAbR;AAiBH,CAlBD;;AAoBA,eAAeD,WAAf","sourcesContent":["export const initialState = {\n    imagePaths: [],\n    mainPosts: [{\n        User: {\n            id: 1,\n            nickname: 'zero',\n            content: 'cho'\n        }\n    }],\n}\n\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_DUMMY = 'ADD_DUMMY';\n\nexport const addPostAction = {\n    type: ADD_POST,\n};\nexport const addDummyAction = {\n    type: ADD_DUMMY,\n    data:{\n        userId: 1,\n        content: 'hello redux',\n        user: {\n            nickname: 'oiry',\n        }\n    }\n};\n\nconst PostReducer = (state=initialState, action) => {\n    switch(action.type){\n        case ADD_POST:\n            return{\n                ...state,\n                mainPosts: []\n            }\n        case ADD_DUMMY:\n            return{\n                ...state,\n                mainPosts:[action.data, ...state.mainPosts]\n            }\n\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default PostReducer;"]},"metadata":{},"sourceType":"module"}