{"ast":null,"code":"import { all, put, call, takeLatest, fork, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\nfunction* loginAPI() {//requesting server part\n}\n\nfunction* login() {\n  try {\n    //yield call(loginAPI);\n    yield delay(3000);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* signupAPI() {}\n\nfunction* signup() {\n  try {\n    //yield call(signupAPI);\n    throw new Error('error, error');\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignup)]);\n}","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/sagas/user.js"],"names":["all","put","call","takeLatest","fork","delay","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","loginAPI","login","type","err","console","error","watchLogin","signupAPI","signup","Error","watchSignup","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,IAArC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,cAAzC,EAAyDC,eAAzD,EAA0EC,eAA1E,EAA2FC,eAA3F,QAAkH,kBAAlH;;AAGA,UAAUC,QAAV,GAAqB,CACjB;AACH;;AAED,UAAUC,KAAV,GAAiB;AACb,MAAG;AACC;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMJ,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEP;AADA,KAAD,CAAT;AAGH,GAND,CAMC,OAAMQ,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEN;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUU,UAAV,GAAsB;AAClB,QAAMf,UAAU,CAACG,cAAD,EAAiBO,KAAjB,CAAhB;AAEH;;AAED,UAAUM,SAAV,GAAqB,CAEpB;;AAED,UAAUC,MAAV,GAAkB;AACd,MAAG;AACC;AACA,UAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACA,UAAMpB,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAT;AAGH,GAND,CAMC,OAAMK,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMd,GAAG,CAAC;AACNa,MAAAA,IAAI,EAAEH,eADA;AAENM,MAAAA,KAAK,EAAEF;AAFD,KAAD,CAAT;AAIH;AAEJ;;AAED,UAAUO,WAAV,GAAuB;AACnB,QAAMnB,UAAU,CAACM,eAAD,EAAkBW,MAAlB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMvB,GAAG,CAAC,CACNI,IAAI,CAACc,UAAD,CADE,EAENd,IAAI,CAACkB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, put, call, takeLatest, fork, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\n\nfunction* loginAPI() {\n    //requesting server part\n}\n\nfunction* login(){\n    try{\n        //yield call(loginAPI);\n        yield delay(3000)\n        yield put({\n            type: LOG_IN_SUCCESS\n        })\n    }catch(err){\n        console.error(err)\n        yield put({\n            type: LOG_IN_FAILURE,\n        })\n    }\n}\n\nfunction* watchLogin(){\n    yield takeLatest(LOG_IN_REQUEST, login)\n    \n}\n\nfunction* signupAPI(){\n    \n}\n\nfunction* signup(){\n    try{\n        //yield call(signupAPI);\n        throw new Error('error, error')\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        })\n    }catch(err){\n        console.error(err)\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: err,\n        })\n    }\n   \n}\n\nfunction* watchSignup(){\n    yield takeLatest(SIGN_UP_REQUEST, signup)\n}\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogin),\n        fork(watchSignup),\n    ])\n}"]},"metadata":{},"sourceType":"module"}