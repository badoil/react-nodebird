{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: []\n};\nexport var ADD_POST = 'ADD_POST';\nexport var ADD_DUMMY = 'ADD_DUMMY';\nvar addPostAction = {\n  type: ADD_POST\n};\nvar addDummyAction = {\n  type: ADD_DUMMY,\n  data: {\n    userId: 1,\n    content: 'hello redux',\n    user: {\n      nickname: 'oiry'\n    }\n  }\n};\n\nvar PostReducer = function PostReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        mainPosts: []\n      });\n\n    case ADD_DUMMY:\n      return _objectSpread({}, state, {\n        mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts))\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default PostReducer;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","ADD_POST","ADD_DUMMY","addPostAction","type","addDummyAction","data","userId","content","user","nickname","PostReducer","state","action"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE;AADa,CAArB;AAIP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,SAAS,GAAG,WAAlB;AAEP,IAAMC,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAEH;AADY,CAAtB;AAGA,IAAMI,cAAc,GAAG;AACnBD,EAAAA,IAAI,EAAEF,SADa;AAEnBI,EAAAA,IAAI,EAAC;AACDC,IAAAA,MAAM,EAAE,CADP;AAEDC,IAAAA,OAAO,EAAE,aAFR;AAGDC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE;AADR;AAHL;AAFc,CAAvB;;AAWA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAgC;AAAA,MAA/BC,KAA+B,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AAChD,UAAOA,MAAM,CAACT,IAAd;AACI,SAAKH,QAAL;AACI,+BACOW,KADP;AAEIZ,QAAAA,SAAS,EAAE;AAFf;;AAIJ,SAAKE,SAAL;AACI,+BACOU,KADP;AAEIZ,QAAAA,SAAS,GAAEa,MAAM,CAACP,IAAT,4BAAkBM,KAAK,CAACZ,SAAxB;AAFb;;AAKJ;AACI,+BACOY,KADP;AAbR;AAiBH,CAlBD;;AAoBA,eAAeD,WAAf","sourcesContent":["export const initialState = {\n    mainPosts: [],\n}\n\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_DUMMY = 'ADD_DUMMY';\n\nconst addPostAction = {\n    type: ADD_POST,\n};\nconst addDummyAction = {\n    type: ADD_DUMMY,\n    data:{\n        userId: 1,\n        content: 'hello redux',\n        user: {\n            nickname: 'oiry',\n        }\n    }\n};\n\nconst PostReducer = (state=initialState, action) => {\n    switch(action.type){\n        case ADD_POST:\n            return{\n                ...state,\n                mainPosts: []\n            }\n        case ADD_DUMMY:\n            return{\n                ...state,\n                mainPosts:[action.data, ...state.mainPosts]\n            }\n\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default PostReducer;"]},"metadata":{},"sourceType":"module"}