{"ast":null,"code":"var _jsxFileName = \"/Users/oil/Desktop/zerocho-react/nodebird/front/components/postCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Form, List, Input, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { EllipsisOutlined, EditOutlined, HeartOutlined, TwitterOutlined } from '@ant-design/icons';\nimport FormItem from 'antd/lib/form/FormItem';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const onSubmitComment = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  const onToggleComment = useCallback(e => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onChangeCommentText = useCallback(e => {\n    setCommentText(e.target.value);\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    key: +post.createdAt,\n    cover: post.img && __jsx(\"img\", {\n      src: post.img,\n      alt: \"example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 28\n      }\n    }),\n    actions: [__jsx(TwitterOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), __jsx(EditOutlined, {\n      key: \"edit\",\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }), __jsx(EllipsisOutlined, {\n      key: \"ellipsis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })],\n    extra: __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }, \"Follow\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }, post.user.nickname[0]),\n    title: post.user.nickname,\n    decription: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), commentFormOpened && __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, __jsx(Input.TextArea, {\n    row: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"jack\")), __jsx(List, {\n    header: `comments: ${post.comments ? post.comments.length : 0}`,\n    itemLayout: \"horizontal\",\n    dataSource: post.comments || [],\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, __jsx(Comment, {\n      author: item.user.nickname,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }\n      }, item.user.nickname[0]),\n      content: item.content,\n      datetime: item.createdAt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  card: PropTypes.shape({\n    User: PropTypes.object,\n    img: PropTypes.string,\n    content: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/components/postCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","Form","List","Input","Comment","PropTypes","EllipsisOutlined","EditOutlined","HeartOutlined","TwitterOutlined","FormItem","PostCard","post","commentFormOpened","setCommentFormOpened","commentText","setCommentText","onSubmitComment","e","preventDefault","onToggleComment","prev","onChangeCommentText","target","value","createdAt","img","user","nickname","content","comments","length","item","propTypes","card","shape","User","object","string"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Form, List, Input, Comment,  } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport { EllipsisOutlined, EditOutlined, HeartOutlined, TwitterOutlined } from '@ant-design/icons';\nimport FormItem from 'antd/lib/form/FormItem';\n\n\nconst PostCard = ({ post } ) => {\n  const [ commentFormOpened, setCommentFormOpened ] = useState(false);\n  const [ commentText, setCommentText ] = useState('');\n\n  const onSubmitComment = useCallback((e) => {\n    e.preventDefault();\n    \n  }, [])\n\n  const onToggleComment = useCallback((e) => {\n    setCommentFormOpened(prev => !prev);\n\n  }, [])\n\n  const onChangeCommentText = useCallback((e) => {\n    setCommentText(e.target.value);\n  }, [])\n\n    return(\n      <div>\n        <Card\n        key={+post.createdAt}\n        cover={post.img && <img src={post.img} alt='example' />}\n        actions={[\n          <TwitterOutlined key='retweet'/>,\n          <HeartOutlined key='heart' />,\n          <EditOutlined key=\"edit\" onClick={onToggleComment} />,\n          <EllipsisOutlined key=\"ellipsis\" />,\n        ]}\n        extra={<Button>Follow</Button>}\n        >\n          <Card.Meta \n          avatar={<Avatar>{post.user.nickname[0]}</Avatar>}\n          title={post.user.nickname}\n          decription={post.content}\n          />                          \n        </Card>\n        { commentFormOpened && \n          <>\n            <form onSubmit={onSubmitComment} >\n              <Form.Item>\n                <Input.TextArea row={4} value={commentText} onChange={onChangeCommentText} />\n              </Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" >jack</Button>\n            </form>\n            <List \n              header={`comments: ${post.comments? post.comments.length: 0}`}\n              itemLayout=\"horizontal\"\n              dataSource={post.comments || []}\n              renderItem={item => (\n                <li>\n                  <Comment \n                  author={item.user.nickname}\n                  avatar={<Avatar>{item.user.nickname[0]}</Avatar>}\n                  content={item.content}\n                  datetime={item.createdAt}\n                  />\n                </li>\n              )}\n            \n            />\n          </>\n        }\n      </div>\n    )\n};\n\nPostCard.propTypes = {\n    card: PropTypes.shape({\n        User: PropTypes.object,\n        img: PropTypes.string,\n        content: PropTypes.string,\n        createdAt: PropTypes.object,\n    })\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}