{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  isAddingPost: false,\n  addPostErrorReason: false,\n  postAdded: false,\n  isAddingComment: false,\n  addCommentErrorReason: false,\n  commentAdded: false,\n  loadMainPostErrorReason: false\n};\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\n\nconst PostReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread({}, state, {\n        isAddingPost: true,\n        postAdded: false,\n        addPostErrorReason: ''\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        mainPosts: [action.data, ...state.mainPosts],\n        isAddingPost: false,\n        postAdded: true,\n        imagePaths: []\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread({}, state, {\n        isAddingPost: false,\n        addPostErrorReason: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread({}, state, {\n        isAddingComment: true,\n        commentAdded: false,\n        addCommentErrorReason: ''\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const comments = [...post.comments, action.data.comment];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          comments\n        });\n        return _objectSpread({}, state, {\n          mainPosts,\n          isAddingComment: false,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread({}, state, {\n        isAddingComment: false,\n        addCommentErrorReason: action.error\n      });\n\n    case LOAD_COMMENTS_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const comments = action.data.comments;\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          comments\n        });\n        return _objectSpread({}, state, {\n          mainPosts\n        });\n      }\n\n    case LOAD_MAIN_POSTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n    case LOAD_USER_POSTS_REQUEST:\n      return _objectSpread({}, state, {\n        mainPosts: action.lastId === 0 ? [] : state.mainPosts,\n        hasMorePosts: action.lastId ? state.hasMorePosts : true\n      });\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_USER_POSTS_SUCCESS:\n      return _objectSpread({}, state, {\n        mainPosts: action.lastId ? action.data : state.mainPosts.concat(action.data),\n        hasMorePosts: action.data.length === 10\n      });\n\n    case LOAD_MAIN_POSTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_USER_POSTS_FAILURE:\n      return _objectSpread({}, state, {\n        loadMainPostErrorReason: action.error\n      });\n\n    case UPLOAD_IMAGES_REQUEST:\n      return _objectSpread({}, state);\n\n    case UPLOAD_IMAGES_SUCCESS:\n      return _objectSpread({}, state, {\n        imagePaths: [...state.imagePaths, ...action.data]\n      });\n\n    case UPLOAD_IMAGES_FAILURE:\n      return _objectSpread({}, state);\n\n    case REMOVE_IMAGE:\n      return _objectSpread({}, state, {\n        imagePaths: state.imagePaths.filter((v, i) => i !== action.index)\n      });\n\n    case LIKE_POST_REQUEST:\n      return _objectSpread({}, state);\n\n    case LIKE_POST_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const Likers = [{\n          id: action.data.userId\n        }, ...post.Likers];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts\n        });\n      }\n\n    case LIKE_POST_FAILURE:\n      return _objectSpread({}, state);\n\n    case UNLIKE_POST_REQUEST:\n      return _objectSpread({}, state);\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n        const post = state.mainPosts[postIndex];\n        const Likers = post.Likers.filter(v => v.id !== action.data.userId);\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts\n        });\n      }\n\n    case UNLIKE_POST_FAILURE:\n      return _objectSpread({}, state);\n\n    case RETWEET_REQUEST:\n      return _objectSpread({}, state);\n\n    case RETWEET_SUCCESS:\n      return _objectSpread({}, state, {\n        mainPosts: [action.data, ...state.mainPosts]\n      });\n\n    case RETWEET_FAILURE:\n      return _objectSpread({}, state);\n\n    case REMOVE_POST_REQUEST:\n      return _objectSpread({}, state);\n\n    case REMOVE_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        mainPosts: state.mainPosts.filter(v => v.id !== action.data)\n      });\n\n    case REMOVE_POST_FAILURE:\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default PostReducer;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","imagePaths","isAddingPost","addPostErrorReason","postAdded","isAddingComment","addCommentErrorReason","commentAdded","loadMainPostErrorReason","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","PostReducer","state","action","type","data","error","postIndex","findIndex","v","id","postId","post","comments","comment","lastId","hasMorePosts","concat","length","filter","i","index","Likers","userId"],"mappings":"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","sourcesContent":["export const initialState = {\n    mainPosts: [],\n    imagePaths: [],\n    isAddingPost: false,\n    addPostErrorReason: false,\n    postAdded: false,\n    isAddingComment: false,\n    addCommentErrorReason: false,\n    commentAdded: false,\n    loadMainPostErrorReason: false,\n}\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\n\n\nconst PostReducer = (state=initialState, action) => {\n    switch(action.type){\n        case ADD_POST_REQUEST:\n            return{\n                ...state,\n                isAddingPost: true,\n                postAdded: false,\n                addPostErrorReason: '',\n            }\n        case ADD_POST_SUCCESS:\n            return{\n                ...state,\n                mainPosts: [action.data, ...state.mainPosts],\n                isAddingPost: false,\n                postAdded: true,\n                imagePaths: [],\n            }\n        case ADD_POST_FAILURE:\n            return{\n                ...state,\n                isAddingPost: false,\n                addPostErrorReason: action.error,\n            }\n        case ADD_COMMENT_REQUEST:\n            return{\n                ...state,\n                isAddingComment: true,\n                commentAdded: false,\n                addCommentErrorReason: '',\n            }\n        case ADD_COMMENT_SUCCESS:{\n            const postIndex = state.mainPosts.findIndex(v=>v.id === action.data.postId);\n            const post = state.mainPosts[postIndex];\n            const comments = [ ...post.comments, action.data.comment ];\n            const mainPosts = [ ...state.mainPosts ];\n            mainPosts[postIndex] = { ...post, comments };\n            return{\n                ...state,\n                mainPosts,\n                isAddingComment: false,\n                commentAdded: true,\n            }\n        }\n        case ADD_COMMENT_FAILURE:\n            return{\n                ...state,\n                isAddingComment: false,\n                addCommentErrorReason: action.error,\n            }\n        case LOAD_COMMENTS_SUCCESS:{\n            const postIndex = state.mainPosts.findIndex(v=>v.id === action.data.postId)\n            const post = state.mainPosts[postIndex];\n            const comments = action.data.comments;\n            const mainPosts = [ ...state.mainPosts ];\n            mainPosts[postIndex] = { ...post, comments };\n            return{\n                ...state,\n                mainPosts,\n            }\n        } \n        case LOAD_MAIN_POSTS_REQUEST:\n        case LOAD_HASHTAG_POSTS_REQUEST:\n        case LOAD_USER_POSTS_REQUEST:\n            return{\n                ...state,\n                mainPosts: action.lastId === 0? []: state.mainPosts,\n                hasMorePosts: action.lastId? state.hasMorePosts: true,\n            }\n        case LOAD_MAIN_POSTS_SUCCESS:\n        case LOAD_HASHTAG_POSTS_SUCCESS:\n        case LOAD_USER_POSTS_SUCCESS:\n            return{\n                ...state,\n                mainPosts: action.lastId? action.data : state.mainPosts.concat(action.data),\n                hasMorePosts: action.data.length === 10,\n            } \n        case LOAD_MAIN_POSTS_FAILURE:\n        case LOAD_HASHTAG_POSTS_FAILURE:\n        case LOAD_USER_POSTS_FAILURE:\n            return{\n                ...state,\n                loadMainPostErrorReason: action.error,\n            }\n        case UPLOAD_IMAGES_REQUEST:\n            return {\n                ...state\n            }\n        case UPLOAD_IMAGES_SUCCESS:\n            return{\n                ...state,\n                imagePaths: [ ...state.imagePaths, ...action.data],\n            }\n        case UPLOAD_IMAGES_FAILURE:\n            return{\n                ...state,\n            }\n        case REMOVE_IMAGE:\n            return{\n                ...state,\n                imagePaths: state.imagePaths.filter((v, i) => i !== action.index),\n            }\n        case LIKE_POST_REQUEST:\n            return {\n                ...state,\n            }\n        case LIKE_POST_SUCCESS:{\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n            const post = state.mainPosts[postIndex];\n            const Likers = [{ id: action.data.userId}, ...post.Likers];\n            const mainPosts = [...state.mainPosts];\n            mainPosts[postIndex] = { ...post, Likers };\n            return{\n                ...state,\n                mainPosts,\n            }\n        }\n        case LIKE_POST_FAILURE:\n            return {\n                ...state,\n            }\n        case UNLIKE_POST_REQUEST:\n            return {\n                ...state,\n            }\n        case UNLIKE_POST_SUCCESS:{\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n            const post = state.mainPosts[postIndex];\n            const Likers = post.Likers.filter(v => v.id !== action.data.userId);\n            const mainPosts = [...state.mainPosts];\n            mainPosts[postIndex] = { ...post, Likers };\n            return{\n                ...state,\n                mainPosts,\n            }\n        }\n        case UNLIKE_POST_FAILURE:\n            return {\n                ...state,\n            }\n        case RETWEET_REQUEST:\n            return{\n                ...state,\n            }\n        case RETWEET_SUCCESS:\n            return{\n                ...state,\n                mainPosts: [ action.data, ...state.mainPosts ],\n            }\n        case RETWEET_FAILURE:\n            return{\n                ...state,\n            }\n        case REMOVE_POST_REQUEST:\n            return{\n                ...state,\n            }\n        case REMOVE_POST_SUCCESS:\n            return{\n                ...state,\n                mainPosts: state.mainPosts.filter(v => v.id !== action.data),\n            }\n        case REMOVE_POST_FAILURE:\n            return{\n                ...state,\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default PostReducer;"]},"metadata":{},"sourceType":"module"}