{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Checkbox, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nexport const useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordCheckError,\n    1: setPasswordCheckError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const [id, onChangeId] = useInput('');\n  const [nick, onChangeNick] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    isSigningUp,\n    me,\n    isSignedUp\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isSignedUp || me) {\n      alert('going to go to home due to login');\n      Router.push('/');\n    }\n  }, [isSignedUp, me]);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordCheckError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        userId: id,\n        nickname: nick,\n        password\n      }\n    });\n  }, [id, nick, password, passwordCheck, term]);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheckError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n\n  if (me) {\n    return null;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-id\"\n  }, \"id\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"nickname\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"password\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    type: \"password\",\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"password-check\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password-check\",\n    value: passwordCheck,\n    type: \"password\",\n    required: true,\n    onChange: onChangePasswordCheck\n  })), passwordCheckError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"dismatch the password\"), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"Are you sure??\")), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"you should agree with the term\"), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp\n  }, \"Signup\"))));\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}