{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/postCard';\nimport { Avatar, Card } from 'antd';\n\nvar User = function User() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  return __jsx(\"div\", null, userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"tweet\"\n    }, \"jack, jack\", __jsx(\"br\", null), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\"\n    }, \"followings\", __jsx(\"br\", null), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\"\n    }, \"Followers\", __jsx(\"br\", null), userInfo.Followers)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname\n  })) : null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      post: c,\n      key: c.id\n    });\n  }));\n};\n\nUser.getInitialProps = function _callee(context) {\n  var id;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = parseInt(context.query.id, 10);\n          console.log('user getInitialProps: ', context.query.id);\n          context.store.dispatch({\n            type: LOAD_USER_REQUEST,\n            data: id\n          });\n          context.store.dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: id\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default User;","map":null,"metadata":{},"sourceType":"module"}