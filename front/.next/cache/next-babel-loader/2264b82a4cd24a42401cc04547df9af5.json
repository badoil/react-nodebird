{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/oil/Desktop/zerocho-react/nodebird/front/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostForm from '../components/postForm';\nimport PostCard from '../components/postCard';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/user';\n\nvar Home = function Home() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  useEffect(function () {\n    if (!me || !me.trim()) {\n      return alert('No text');\n    }\n\n    dispatch({\n      type: LOAD_MAIN_POSTS_REQUEST\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, me ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }, \"login: \", me.nickname) : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 52\n    }\n  }, \"logout\"), isLoggedIn && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }), mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c,\n      post: c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 23\n      }\n    });\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","PostForm","PostCard","LOAD_MAIN_POSTS_REQUEST","Home","dispatch","state","user","me","isLoggedIn","post","mainPosts","trim","alert","type","nickname","map","c"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,uBAAT,QAAwC,kBAAxC;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADe,qBAEYC,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFvB;AAAA,MAEPC,EAFO,gBAEPA,EAFO;AAAA,MAEHC,UAFG,gBAEHA,UAFG;;AAAA,sBAGOT,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACI,IAAV;AAAA,GAAN,CAHlB;AAAA,MAGPC,SAHO,iBAGPA,SAHO;;AAKfb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAG,CAACU,EAAD,IAAO,CAACA,EAAE,CAACI,IAAH,EAAX,EAAqB;AACjB,aAAOC,KAAK,CAAC,SAAD,CAAZ;AACH;;AACDR,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEX;AADD,KAAD,CAAR;AAGH,GAPQ,EAON,EAPM,CAAT;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,EAAE,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaA,EAAE,CAACO,QAAhB,CAAH,GAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD3C,EAEMN,UAAU,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpB,EAGQE,SAAS,CAACK,GAAV,CAAc,UAACC,CAAD,EAAO;AACnB,WACI,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,IAAI,EAAEA,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJC,CAHR,CADJ;AAYH,CA1BD;;AA4BA,eAAeb,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PostForm from '../components/postForm';\nimport PostCard from '../components/postCard';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/user';\n\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const { me, isLoggedIn } = useSelector(state => state.user);\n    const { mainPosts } = useSelector(state => state.post);\n\n    useEffect(() => {\n        if(!me || !me.trim()){\n            return alert('No text');\n        }\n        dispatch({\n            type: LOAD_MAIN_POSTS_REQUEST,\n        })\n    }, [])\n\n    return (\n        <div>\n            {me ? <div>login: {me.nickname}</div>: <div>logout</div>}\n            { isLoggedIn && <PostForm />}\n              { mainPosts.map((c) => {\n                  return(\n                      <PostCard key={c} post={c} />\n                  )\n              })\n              }\n        </div>\n    )\n}\n\nexport default Home; "]},"metadata":{},"sourceType":"module"}