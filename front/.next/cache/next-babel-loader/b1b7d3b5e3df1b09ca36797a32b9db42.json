{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport createSagamiddleware from 'redux-saga';\nimport axios from 'axios';\nimport rootReducer from '../reducers';\nimport AppLayout from '../components/appLayout';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nconst Nodebird = ({\n  Component,\n  store,\n  pageProps\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    store: store\n  }, __jsx(Head, null, __jsx(\"title\", null, \"Nodebird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    charSet: \"UTF-8\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\n  }), __jsx(\"link\", {\n    rel: \"shortcut icon\",\n    href: \"/public/favicon.ico\"\n  })), __jsx(AppLayout, null, __jsx(Component, pageProps))));\n};\n\nNodebird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\n\nNodebird.getInitialProps = async context => {\n  const {\n    ctx,\n    Component\n  } = context;\n  let pageProps = {};\n  const state = ctx.store.getState();\n  const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (ctx.isServer && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  if (!state.user.me) {\n    ctx.store.dispatch({\n      type: LOAD_USER_REQUEST // there is no user.me in the reducer state yet\n\n    }); // so after Component.getInitialProps work in component Profile,\n  } // no working in dispatch \n\n\n  if (Component.getInitialProps) {\n    pageProps = (await Component.getInitialProps(ctx)) || {};\n  }\n\n  return {\n    pageProps\n  };\n};\n\nconst configureStore = (initialState, options) => {\n  const sagamiddleware = createSagamiddleware();\n  const middlewares = [sagamiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(rootReducer, initialState, enhancer);\n  store.sagaTask = sagamiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(Nodebird));","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/pages/_app.js"],"names":["React","Head","PropTypes","createStore","compose","applyMiddleware","Provider","withRedux","withReduxSaga","createSagamiddleware","axios","rootReducer","AppLayout","rootSaga","LOAD_USER_REQUEST","Nodebird","Component","store","pageProps","propTypes","elementType","isRequired","object","getInitialProps","context","ctx","state","getState","cookie","isServer","req","headers","defaults","Cookie","user","me","dispatch","type","configureStore","initialState","options","sagamiddleware","middlewares","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux'\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport createSagamiddleware from 'redux-saga';\nimport axios from 'axios';\n\nimport rootReducer from '../reducers';\nimport AppLayout from '../components/appLayout';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\n\nconst Nodebird = ({ Component, store, pageProps }) => {\n    return(\n        <>\n            <Provider store={store} >\n                <Head>\n                    <title>Nodebird</title>\n                    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\" />\n                    <link rel=\"stylesheet\" type=\"text/css\" charSet=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\n                    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\n                    <link rel=\"shortcut icon\" href=\"/public/favicon.ico\" />\n                </ Head>\n                <AppLayout>\n                    <Component {...pageProps} />\n                </AppLayout>\n            </Provider>\n        </>\n    )\n}\n\nNodebird.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    store: PropTypes.object.isRequired,\n    pageProps: PropTypes.object.isRequired,\n}\n\nNodebird.getInitialProps = async (context) => {\n    const { ctx, Component }  = context;\n    let pageProps = {};\n    const state = ctx.store.getState()\n    const cookie = ctx.isServer? ctx.req.headers.cookie: '';\n    axios.defaults.headers.Cookie = '';\n    if(ctx.isServer && cookie){\n        axios.defaults.headers.Cookie = cookie;\n    }\n    if(!state.user.me){\n        ctx.store.dispatch({\n            type: LOAD_USER_REQUEST,          // there is no user.me in the reducer state yet\n        })                                    // so after Component.getInitialProps work in component Profile,\n    }                                         // no working in dispatch \n    if(Component.getInitialProps){\n       pageProps =  await Component.getInitialProps(ctx) || {};\n    }\n    return {pageProps};\n}\n\nconst configureStore = (initialState, options) => {\n    const sagamiddleware = createSagamiddleware();\n    const middlewares = [sagamiddleware];\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : compose(applyMiddleware(...middlewares), \n    !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f,)\n\n    const store = createStore(rootReducer, initialState, enhancer);\n    store.sagaTask = sagamiddleware.run(rootSaga)\n    return store;\n};\n\nexport default  withRedux(configureStore)(withReduxSaga(Nodebird));"]},"metadata":{},"sourceType":"module"}