{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport Proptypes from 'prop-types';\nimport ImagesZoom from './imagesZoom';\nimport { PlusOutlined } from '@ant-design/icons';\n\nvar PostImage = function PostImage(_ref) {\n  var images = _ref.images;\n\n  var _useState = useState(false),\n      showImagesZoom = _useState[0],\n      setShowImagesZoom = _useState[1];\n\n  var onZoom = useCallback(function () {\n    setShowImagesZoom(true);\n  }, []);\n\n  if (images.length === 1) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: \"http://localhost:3306/\".concat(images[0].src),\n      alt: 'post image',\n      onClick: onZoom\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images\n    }));\n  } else if (images.length === 2) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n      src: \"http://localhost:3306/\".concat(images[0].src),\n      alt: 'post image1',\n      width: \"50%\",\n      onClick: onZoom\n    }), __jsx(\"img\", {\n      src: \"http://localhost:3306/\".concat(images[1].src),\n      alt: 'post image2',\n      width: \"50%\",\n      onClick: onZoom\n    })), showImagesZoom && __jsx(ImagesZoom, {\n      images: images\n    }));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n      src: \"http://localhost:3306/\".concat(images[0].src),\n      alt: 'post image1'\n    }), __jsx(\"div\", {\n      style: {\n        display: 'inline-block',\n        width: '50%',\n        textAlign: 'center',\n        verticalAlign: 'middle'\n      },\n      onClick: onZoom\n    }, __jsx(PlusOutlined, null), __jsx(\"br\", null), \"See more \", images.length - 1, \" images\")), showImagesZoom && __jsx(ImagesZoom, {\n      images: images\n    }));\n  }\n};\n\nPostImage.proptypes = {\n  images: Proptypes.arrayOf(Proptypes.object).isRequired\n};\nexport default PostImage;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/components/postImages.js"],"names":["React","useState","useCallback","Proptypes","ImagesZoom","PlusOutlined","PostImage","images","showImagesZoom","setShowImagesZoom","onZoom","length","src","display","width","textAlign","verticalAlign","proptypes","arrayOf","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACgBN,QAAQ,CAAC,KAAD,CADxB;AAAA,MACtBO,cADsB;AAAA,MACNC,iBADM;;AAE9B,MAAMC,MAAM,GAAGR,WAAW,CAAC,YAAM;AAC7BO,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFyB,EAEvB,EAFuB,CAA1B;;AAIA,MAAGF,MAAM,CAACI,MAAP,KAAkB,CAArB,EAAuB;AACnB,WACI,4BACA;AAAK,MAAA,GAAG,kCAA2BJ,MAAM,CAAC,CAAD,CAAN,CAAUK,GAArC,CAAR;AAAoD,MAAA,GAAG,EAAE,YAAzD;AAAuE,MAAA,OAAO,EAAEF;AAAhF,MADA,EAECF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED;AAApB,MAFnB,CADJ;AAMH,GAPD,MAOM,IAAGA,MAAM,CAACI,MAAP,KAAkB,CAArB,EAAuB;AACzB,WACI,4BACA,mBACI;AAAK,MAAA,GAAG,kCAA2BJ,MAAM,CAAC,CAAD,CAAN,CAAUK,GAArC,CAAR;AAAoD,MAAA,GAAG,EAAE,aAAzD;AAAwE,MAAA,KAAK,EAAC,KAA9E;AAAoF,MAAA,OAAO,EAAEF;AAA7F,MADJ,EAEI;AAAK,MAAA,GAAG,kCAA2BH,MAAM,CAAC,CAAD,CAAN,CAAUK,GAArC,CAAR;AAAoD,MAAA,GAAG,EAAE,aAAzD;AAAwE,MAAA,KAAK,EAAC,KAA9E;AAAoF,MAAA,OAAO,EAAEF;AAA7F,MAFJ,CADA,EAKCF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED;AAApB,MALnB,CADJ;AASH,GAVK,MAUD;AACD,WACI,4BACA,mBACI;AAAK,MAAA,GAAG,kCAA2BA,MAAM,CAAC,CAAD,CAAN,CAAUK,GAArC,CAAR;AAAoD,MAAA,GAAG,EAAE;AAAzD,MADJ,EAEI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,cAAV;AAA0BC,QAAAA,KAAK,EAAC,KAAhC;AAAuCC,QAAAA,SAAS,EAAE,QAAlD;AAA4DC,QAAAA,aAAa,EAAC;AAA1E,OAAZ;AAAiG,MAAA,OAAO,EAAEN;AAA1G,OACI,MAAC,YAAD,OADJ,EAEI,iBAFJ,eAGcH,MAAM,CAACI,MAAP,GAAgB,CAH9B,YAFJ,CADA,EASCH,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED;AAApB,MATnB,CADJ;AAaH;AACJ,CAtCD;;AAwCAD,SAAS,CAACW,SAAV,GAAsB;AAClBV,EAAAA,MAAM,EAAEJ,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,MAA5B,EAAoCC;AAD1B,CAAtB;AAIA,eAAed,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Proptypes from 'prop-types';\n\nimport ImagesZoom from './imagesZoom';\n\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst PostImage = ({ images }) => {\n    const [ showImagesZoom, setShowImagesZoom ] = useState(false);\n    const onZoom = useCallback(() => {\n        setShowImagesZoom(true);\n    }, [])\n\n    if(images.length === 1){\n        return(\n            <>\n            <img src={`http://localhost:3306/${images[0].src}`} alt={'post image'} onClick={onZoom} />\n            {showImagesZoom && <ImagesZoom images={images} />}\n            </>\n        )\n    }else if(images.length === 2){\n        return(\n            <>\n            <div>\n                <img src={`http://localhost:3306/${images[0].src}`} alt={'post image1'} width='50%' onClick={onZoom} />\n                <img src={`http://localhost:3306/${images[1].src}`} alt={'post image2'} width='50%' onClick={onZoom} />\n            </div>\n            {showImagesZoom && <ImagesZoom images={images} />}\n            </>\n        )\n    }else{\n        return(\n            <>\n            <div>\n                <img src={`http://localhost:3306/${images[0].src}`} alt={'post image1'} />\n                <div style={{display: 'inline-block', width:'50%', textAlign: 'center', verticalAlign:'middle'}} onClick={onZoom}>\n                    <PlusOutlined />\n                    <br />\n                    See more {images.length - 1} images\n                </div>\n            </div>\n            {showImagesZoom && <ImagesZoom images={images} />}\n            </>\n        )\n    }\n}\n\nPostImage.proptypes = {\n    images: Proptypes.arrayOf(Proptypes.object).isRequired,\n}\n\nexport default PostImage;"]},"metadata":{},"sourceType":"module"}