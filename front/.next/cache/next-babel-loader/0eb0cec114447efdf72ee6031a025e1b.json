{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostForm from '../components/postForm';\nimport PostCard from '../components/postCard';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    isLoggedIn\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const onScroll = useCallback(() => {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      console.log('hasMorePosts: ', hasMorePosts);\n      console.log('lastId::', mainPosts[mainPosts.length - 1].id);\n      dispatch({\n        type: LOAD_MAIN_POSTS_REQUEST,\n        lastId: mainPosts[mainPosts.length - 1].id\n      });\n    }\n  }, [mainPosts && mainPosts.length]);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n  return __jsx(\"div\", null, me ? __jsx(\"div\", null, \"login: \", me.nickname) : __jsx(\"div\", null, \"logout\"), isLoggedIn && __jsx(PostForm, null), mainPosts.map(c => {\n    return __jsx(PostCard, {\n      key: c,\n      post: c\n    });\n  }));\n};\n\nHome.getInitialProps = async context => {\n  console.log('context:', context);\n  context.store.dispatch({\n    type: LOAD_MAIN_POSTS_REQUEST\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/pages/index.js"],"names":["React","useEffect","useCallback","useDispatch","useSelector","PostForm","PostCard","LOAD_MAIN_POSTS_REQUEST","Home","dispatch","me","isLoggedIn","state","user","mainPosts","post","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","console","log","hasMorePosts","length","id","type","lastId","addEventListener","removeEventListener","nickname","map","c","getInitialProps","context","store"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,uBAAT,QAAwC,kBAAxC;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAqBP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAtC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAjC;AAEA,QAAMC,QAAQ,GAAGd,WAAW,CAAC,MAAM;AAC/B,QAAGe,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAApG,EAAwG;AACpGC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,YAA9B;AAEIF,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBV,SAAS,CAACA,SAAS,CAACY,MAAV,GAAiB,CAAlB,CAAT,CAA8BC,EAAtD;AACAlB,MAAAA,QAAQ,CAAC;AACLmB,QAAAA,IAAI,EAAErB,uBADD;AAELsB,QAAAA,MAAM,EAAEf,SAAS,CAACA,SAAS,CAACY,MAAV,GAAiB,CAAlB,CAAT,CAA8BC;AAFjC,OAAD,CAAR;AAKP;AACJ,GAX2B,EAWzB,CAACb,SAAS,IAAIA,SAAS,CAACY,MAAxB,CAXyB,CAA5B;AAaAzB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCd,QAAlC;AACA,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCf,QAArC;AACH,KAFD;AAGH,GALQ,EAKN,CAACF,SAAS,CAACY,MAAX,CALM,CAAT;AAOA,SACI,mBACKhB,EAAE,GAAG,8BAAaA,EAAE,CAACsB,QAAhB,CAAH,GAAoC,4BAD3C,EAEMrB,UAAU,IAAI,MAAC,QAAD,OAFpB,EAGQG,SAAS,CAACmB,GAAV,CAAeC,CAAD,IAAO;AACnB,WACI,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,IAAI,EAAEA;AAAxB,MADJ;AAGH,GAJC,CAHR,CADJ;AAYH,CArCD;;AAuCA1B,IAAI,CAAC2B,eAAL,GAAuB,MAAOC,OAAP,IAAmB;AACtCb,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBY,OAAxB;AACAA,EAAAA,OAAO,CAACC,KAAR,CAAc5B,QAAd,CAAuB;AACnBmB,IAAAA,IAAI,EAAErB;AADa,GAAvB;AAGH,CALD;;AAOA,eAAeC,IAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PostForm from '../components/postForm';\nimport PostCard from '../components/postCard';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const { me, isLoggedIn } = useSelector(state => state.user);\n    const { mainPosts } = useSelector(state => state.post);\n\n    const onScroll = useCallback(() => {\n        if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300){\n            console.log('hasMorePosts: ', hasMorePosts)\n            \n                console.log('lastId::', mainPosts[mainPosts.length-1].id);\n                dispatch({\n                    type: LOAD_MAIN_POSTS_REQUEST,\n                    lastId: mainPosts[mainPosts.length-1].id,\n                })\n            \n        }\n    }, [mainPosts && mainPosts.length])\n\n    useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n            window.removeEventListener('scroll', onScroll)\n        };\n    }, [mainPosts.length])\n\n    return (\n        <div>\n            {me ? <div>login: {me.nickname}</div>: <div>logout</div>}\n            { isLoggedIn && <PostForm />}\n              { mainPosts.map((c) => {\n                  return(\n                      <PostCard key={c} post={c} />\n                  )\n              })\n              }\n        </div>\n    )\n}\n\nHome.getInitialProps = async (context) => {\n    console.log('context:', context);\n    context.store.dispatch({\n        type: LOAD_MAIN_POSTS_REQUEST,\n    })\n}\n\nexport default Home; "]},"metadata":{},"sourceType":"module"}