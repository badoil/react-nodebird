{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { List, Button, Card } from 'antd';\nimport { StopOutlined } from '@ant-design/icons';\nimport NicknameEditForm from '../components/nicknameEditForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWERS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\nconst Profile = () => {\n  const {\n    me,\n    followingList,\n    followerList\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (me && me.id) {\n      dispatch({\n        type: LOAD_FOLLOWINGS_REQUEST,\n        data: me.id\n      });\n      dispatch({\n        type: LOAD_FOLLOWERS_REQUEST,\n        data: me.id\n      });\n      dispatch({\n        type: LOAD_MAIN_POSTS_REQUEST,\n        data: me.id\n      });\n    }\n  }, [me && me.id]);\n  const onUnfollow = useCallback(userId => () => {\n    dispatch({\n      type: UNFOLLOW_USER_REQUEST,\n      data: userId\n    });\n  }, []);\n  const onRemoveFollower = useCallback(userId => () => {\n    dispatch({\n      type: REMOVE_FOLLOWER_REQUEST,\n      data: userId\n    });\n  }, []);\n  return __jsx(\"div\", null, __jsx(NicknameEditForm, null), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    loadMore: __jsx(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(StopOutlined, {\n        key: \"stop\",\n        onClick: onUnfollow(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: __jsx(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: __jsx(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: item => __jsx(List.Item, {\n      style: {\n        marginTop: '20px'\n      }\n    }, __jsx(Card, {\n      actions: [__jsx(StopOutlined, {\n        key: \"stop\",\n        onClick: onRemoveFollower(item.id)\n      })]\n    }, __jsx(Card.Meta, {\n      description: item.nickname\n    })))\n  }), __jsx(\"div\", null, mainPosts.map(v => __jsx(PostCard, {\n    post: v,\n    key: +c.createdAt\n  }))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/pages/profile.js"],"names":["React","useCallback","useEffect","List","Button","Card","StopOutlined","NicknameEditForm","useDispatch","useSelector","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWERS_REQUEST","UNFOLLOW_USER_REQUEST","REMOVE_FOLLOWER_REQUEST","LOAD_MAIN_POSTS_REQUEST","Profile","me","followingList","followerList","state","user","mainPosts","post","dispatch","id","type","data","onUnfollow","userId","onRemoveFollower","marginBottom","gutter","xs","md","width","item","marginTop","nickname","map","v","c","createdAt"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { List, Button, Card } from 'antd';\nimport { StopOutlined } from '@ant-design/icons';\nimport NicknameEditForm from '../components/nicknameEditForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWERS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../reducers/post';\n\n\nconst Profile = () => {\n    const { me, followingList, followerList } = useSelector(state => state.user);\n    const { mainPosts } = useSelector(state => state.post);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(me && me.id){\n            dispatch({\n                type: LOAD_FOLLOWINGS_REQUEST,\n                data: me.id,\n            })\n            dispatch({\n                type: LOAD_FOLLOWERS_REQUEST,\n                data: me.id,\n            })\n            dispatch({\n                type: LOAD_MAIN_POSTS_REQUEST,\n                data: me.id,\n            })\n        }\n    }, [me && me.id])\n\n    const onUnfollow = useCallback(userId => () =>{\n        dispatch({\n            type: UNFOLLOW_USER_REQUEST,\n            data: userId,\n        })\n    }, [])\n\n    const onRemoveFollower = useCallback(userId => () => {\n        dispatch({\n            type: REMOVE_FOLLOWER_REQUEST, \n            data: userId,\n        })\n     }, [])\n\n    return(\n        <div>\n            <NicknameEditForm />\n            <List\n                style={{ marginBottom: '20px' }}\n                grid={{ gutter: 4, xs: 2, md: 3 }}\n                size=\"small\"\n                header={<div>팔로잉 목록</div>}\n                loadMore={<Button style={{ width: '100%' }}>더 보기</Button>}\n                bordered\n                dataSource={followingList}\n                renderItem={item => (\n                <List.Item style={{ marginTop: '20px' }}>\n                    <Card actions={[<StopOutlined key='stop' onClick={onUnfollow(item.id)} />]}>\n                        <Card.Meta description={item.nickname} />\n                    </Card>\n                </List.Item>\n                )}\n            />\n            <List\n                style={{ marginBottom: '20px' }}\n                grid={{ gutter: 4, xs: 2, md: 3 }}\n                size=\"small\"\n                header={<div>팔로워 목록</div>}\n                loadMore={<Button style={{ width: '100%' }}>더 보기</Button>}\n                bordered\n                dataSource={followerList}\n                renderItem={item => (\n                <List.Item style={{ marginTop: '20px' }}>\n                    <Card actions={[<StopOutlined key='stop' onClick={onRemoveFollower(item.id)} />]}>\n                        <Card.Meta description={item.nickname} />\n                    </Card>\n                </List.Item>\n                )}\n            />\n            <div>\n            {\n                mainPosts.map((v) => (\n                    <PostCard post={v} key={+c.createdAt} />\n                ))\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}