{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  isAddingPost: false,\n  addPostErrorReason: false,\n  postAdded: false,\n  isAddingComment: false,\n  addCommentErrorReason: false,\n  commentAdded: false\n};\nconst dummyComment = {\n  id: 1,\n  user: {\n    nickname: 2,\n    id: 1\n  },\n  content: 'this is dummy comment',\n  createdAt: new Date()\n};\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nconst PostReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread({}, state, {\n        isAddingPost: true,\n        postAdded: false,\n        addPostErrorReason: ''\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        mainPosts: [action.data, ...state.mainPosts],\n        isAddingPost: false,\n        postAdded: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread({}, state, {\n        isAddingPost: false,\n        addPostErrorReason: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread({}, state, {\n        isAddingComment: true,\n        commentAdded: false,\n        addCommentErrorReason: ''\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n      const post = state.mainPosts[postIndex];\n      const comments = [...post.comments, dummyComment];\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = _objectSpread({}, post, {\n        comments\n      });\n      return _objectSpread({}, state, {\n        mainPosts,\n        isAddingComment: false,\n        commentAdded: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread({}, state, {\n        isAddingComment: false,\n        addCommentErrorReason: action.error\n      });\n\n    case LOAD_MAIN_POSTS_REQUEST:\n      return _objectSpread({}, state, {\n        mainPosts: []\n      });\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n      return _objectSpread({}, state, {\n        mainPosts: [action.data]\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default PostReducer;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","imagePaths","isAddingPost","addPostErrorReason","postAdded","isAddingComment","addCommentErrorReason","commentAdded","dummyComment","id","user","nickname","content","createdAt","Date","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","PostReducer","state","action","type","data","error","postIndex","findIndex","v","postId","post","comments"],"mappings":"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","sourcesContent":["export const initialState = {\n    mainPosts: [],\n    imagePaths: [],\n    isAddingPost: false,\n    addPostErrorReason: false,\n    postAdded: false,\n    isAddingComment: false,\n    addCommentErrorReason: false,\n    commentAdded: false,\n}\n\nconst dummyComment = {\n    id: 1,\n    user: {\n        nickname: 2,\n        id: 1,\n    },\n    content: 'this is dummy comment',\n    createdAt: new Date(),\n}\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\n\nconst PostReducer = (state=initialState, action) => {\n    switch(action.type){\n        case ADD_POST_REQUEST:\n            return{\n                ...state,\n                isAddingPost: true,\n                postAdded: false,\n                addPostErrorReason: '',\n            }\n        case ADD_POST_SUCCESS:\n            return{\n                ...state,\n                mainPosts: [action.data, ...state.mainPosts],\n                isAddingPost: false,\n                postAdded: true,\n            }\n        case ADD_POST_FAILURE:\n            return{\n                ...state,\n                isAddingPost: false,\n                addPostErrorReason: action.error,\n            }\n        case ADD_COMMENT_REQUEST:\n            return{\n                ...state,\n                isAddingComment: true,\n                commentAdded: false,\n                addCommentErrorReason: '',\n            }\n        case ADD_COMMENT_SUCCESS:\n            const postIndex = state.mainPosts.findIndex(v=>v.id === action.data.postId);\n            const post = state.mainPosts[postIndex];\n            const comments = [ ...post.comments, dummyComment ];\n            const mainPosts = [ ...state.mainPosts ];\n            mainPosts[postIndex] = { ...post, comments };\n            return{\n                ...state,\n                mainPosts,\n                isAddingComment: false,\n                commentAdded: true,\n            }\n        case ADD_COMMENT_FAILURE:\n            return{\n                ...state,\n                isAddingComment: false,\n                addCommentErrorReason: action.error,\n            } \n        case LOAD_MAIN_POSTS_REQUEST:\n            return{\n                ...state,\n                mainPosts: [],\n            }\n        case LOAD_MAIN_POSTS_SUCCESS:\n            return{\n                ...state,\n                mainPosts: [action.data],\n            } \n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default PostReducer;"]},"metadata":{},"sourceType":"module"}