{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  isAddingPost: false,\n  addPostErrorReason: false,\n  postAdded: false,\n  isAddingComment: false,\n  addCommentErrorReason: false,\n  commentAdded: false,\n  loadMainPostErrorReason: false,\n  hasMorePosts: true\n};\nexport var LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport var LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport var LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport var LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport var LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nvar PostReducer = function PostReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread({}, state, {\n        isAddingPost: true,\n        postAdded: false,\n        addPostErrorReason: ''\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts)),\n        isAddingPost: false,\n        postAdded: true,\n        imagePaths: []\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread({}, state, {\n        isAddingPost: false,\n        addPostErrorReason: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread({}, state, {\n        isAddingComment: true,\n        commentAdded: false,\n        addCommentErrorReason: ''\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex];\n        var comments = [].concat(_toConsumableArray(post.comments), [action.data.comment]);\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          comments: comments\n        });\n        return _objectSpread({}, state, {\n          mainPosts: mainPosts,\n          isAddingComment: false,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread({}, state, {\n        isAddingComment: false,\n        addCommentErrorReason: action.error\n      });\n\n    case LOAD_COMMENTS_SUCCESS:\n      {\n        var _postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post = state.mainPosts[_postIndex];\n        var _comments = action.data.comments;\n\n        var _mainPosts = _toConsumableArray(state.mainPosts);\n\n        _mainPosts[_postIndex] = _objectSpread({}, _post, {\n          comments: _comments\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts\n        });\n      }\n\n    case LOAD_MAIN_POSTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n    case LOAD_USER_POSTS_REQUEST:\n      return _objectSpread({}, state, {\n        mainPosts: action.lastId === 0 ? [] : state.mainPosts,\n        hasMorePosts: action.lastId ? state.hasMorePosts : true\n      });\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_USER_POSTS_SUCCESS:\n      return _objectSpread({}, state, {\n        mainPosts: action.lastId ? action.data : state.mainPosts.concat(action.data),\n        hasMorePosts: action.data === 10\n      });\n\n    case LOAD_MAIN_POSTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_USER_POSTS_FAILURE:\n      return _objectSpread({}, state, {\n        loadMainPostErrorReason: action.error\n      });\n\n    case UPLOAD_IMAGES_REQUEST:\n      return _objectSpread({}, state);\n\n    case UPLOAD_IMAGES_SUCCESS:\n      return _objectSpread({}, state, {\n        imagePaths: [].concat(_toConsumableArray(state.imagePaths), _toConsumableArray(action.data))\n      });\n\n    case UPLOAD_IMAGES_FAILURE:\n      return _objectSpread({}, state);\n\n    case REMOVE_IMAGE:\n      return _objectSpread({}, state, {\n        imagePaths: state.imagePaths.filter(function (v, i) {\n          return i !== action.index;\n        })\n      });\n\n    case LIKE_POST_REQUEST:\n      return _objectSpread({}, state);\n\n    case LIKE_POST_SUCCESS:\n      {\n        var _postIndex2 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post2 = state.mainPosts[_postIndex2];\n        var Likers = [{\n          id: action.data.userId\n        }].concat(_toConsumableArray(_post2.Likers));\n\n        var _mainPosts2 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts2[_postIndex2] = _objectSpread({}, _post2, {\n          Likers: Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts2\n        });\n      }\n\n    case LIKE_POST_FAILURE:\n      return _objectSpread({}, state);\n\n    case UNLIKE_POST_REQUEST:\n      return _objectSpread({}, state);\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        var _postIndex3 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post3 = state.mainPosts[_postIndex3];\n\n        var _Likers = _post3.Likers.filter(function (v) {\n          return v.id !== action.data.userId;\n        });\n\n        var _mainPosts3 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts3[_postIndex3] = _objectSpread({}, _post3, {\n          Likers: _Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts3\n        });\n      }\n\n    case UNLIKE_POST_FAILURE:\n      return _objectSpread({}, state);\n\n    case RETWEET_REQUEST:\n      return _objectSpread({}, state);\n\n    case RETWEET_SUCCESS:\n      return _objectSpread({}, state, {\n        mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts))\n      });\n\n    case RETWEET_FAILURE:\n      return _objectSpread({}, state);\n\n    case REMOVE_POST_REQUEST:\n      return _objectSpread({}, state);\n\n    case REMOVE_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        mainPosts: state.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        })\n      });\n\n    case REMOVE_POST_FAILURE:\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default PostReducer;","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","imagePaths","isAddingPost","addPostErrorReason","postAdded","isAddingComment","addCommentErrorReason","commentAdded","loadMainPostErrorReason","hasMorePosts","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","PostReducer","state","action","type","data","error","postIndex","findIndex","v","id","postId","post","comments","comment","lastId","concat","filter","i","index","Likers","userId"],"mappings":"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","sourcesContent":["export const initialState = {\n    mainPosts: [],\n    imagePaths: [],\n    isAddingPost: false,\n    addPostErrorReason: false,\n    postAdded: false,\n    isAddingComment: false,\n    addCommentErrorReason: false,\n    commentAdded: false,\n    loadMainPostErrorReason: false,\n    hasMorePosts: true,\n}\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\n\nconst PostReducer = (state=initialState, action) => {\n    switch(action.type){\n        case ADD_POST_REQUEST:\n            return{\n                ...state,\n                isAddingPost: true,\n                postAdded: false,\n                addPostErrorReason: '',\n            }\n        case ADD_POST_SUCCESS:\n            return{\n                ...state,\n                mainPosts: [action.data, ...state.mainPosts],\n                isAddingPost: false,\n                postAdded: true,\n                imagePaths: [],\n            }\n        case ADD_POST_FAILURE:\n            return{\n                ...state,\n                isAddingPost: false,\n                addPostErrorReason: action.error,\n            }\n        case ADD_COMMENT_REQUEST:\n            return{\n                ...state,\n                isAddingComment: true,\n                commentAdded: false,\n                addCommentErrorReason: '',\n            }\n        case ADD_COMMENT_SUCCESS:{\n            const postIndex = state.mainPosts.findIndex(v=>v.id === action.data.postId);\n            const post = state.mainPosts[postIndex];\n            const comments = [ ...post.comments, action.data.comment ];\n            const mainPosts = [ ...state.mainPosts ];\n            mainPosts[postIndex] = { ...post, comments };\n            return{\n                ...state,\n                mainPosts,\n                isAddingComment: false,\n                commentAdded: true,\n            }\n        }\n        case ADD_COMMENT_FAILURE:\n            return{\n                ...state,\n                isAddingComment: false,\n                addCommentErrorReason: action.error,\n            }\n        case LOAD_COMMENTS_SUCCESS:{\n            const postIndex = state.mainPosts.findIndex(v=>v.id === action.data.postId)\n            const post = state.mainPosts[postIndex];\n            const comments = action.data.comments;\n            const mainPosts = [ ...state.mainPosts ];\n            mainPosts[postIndex] = { ...post, comments };\n            return{\n                ...state,\n                mainPosts,\n            }\n        } \n        case LOAD_MAIN_POSTS_REQUEST:\n        case LOAD_HASHTAG_POSTS_REQUEST:\n        case LOAD_USER_POSTS_REQUEST:\n            return{\n                ...state,\n                mainPosts: action.lastId === 0? []: state.mainPosts,\n                hasMorePosts: action.lastId? state.hasMorePosts: true,\n            }\n        case LOAD_MAIN_POSTS_SUCCESS:\n        case LOAD_HASHTAG_POSTS_SUCCESS:\n        case LOAD_USER_POSTS_SUCCESS:\n            return{\n                ...state,\n                mainPosts: action.lastId? action.data : state.mainPosts.concat(action.data),\n                hasMorePosts: action.data === 10,\n            } \n        case LOAD_MAIN_POSTS_FAILURE:\n        case LOAD_HASHTAG_POSTS_FAILURE:\n        case LOAD_USER_POSTS_FAILURE:\n            return{\n                ...state,\n                loadMainPostErrorReason: action.error,\n            }\n        case UPLOAD_IMAGES_REQUEST:\n            return {\n                ...state\n            }\n        case UPLOAD_IMAGES_SUCCESS:\n            return{\n                ...state,\n                imagePaths: [ ...state.imagePaths, ...action.data],\n            }\n        case UPLOAD_IMAGES_FAILURE:\n            return{\n                ...state,\n            }\n        case REMOVE_IMAGE:\n            return{\n                ...state,\n                imagePaths: state.imagePaths.filter((v, i) => i !== action.index),\n            }\n        case LIKE_POST_REQUEST:\n            return {\n                ...state,\n            }\n        case LIKE_POST_SUCCESS:{\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n            const post = state.mainPosts[postIndex];\n            const Likers = [{ id: action.data.userId}, ...post.Likers];\n            const mainPosts = [...state.mainPosts];\n            mainPosts[postIndex] = { ...post, Likers };\n            return{\n                ...state,\n                mainPosts,\n            }\n        }\n        case LIKE_POST_FAILURE:\n            return {\n                ...state,\n            }\n        case UNLIKE_POST_REQUEST:\n            return {\n                ...state,\n            }\n        case UNLIKE_POST_SUCCESS:{\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n            const post = state.mainPosts[postIndex];\n            const Likers = post.Likers.filter(v => v.id !== action.data.userId);\n            const mainPosts = [...state.mainPosts];\n            mainPosts[postIndex] = { ...post, Likers };\n            return{\n                ...state,\n                mainPosts,\n            }\n        }\n        case UNLIKE_POST_FAILURE:\n            return {\n                ...state,\n            }\n        case RETWEET_REQUEST:\n            return{\n                ...state,\n            }\n        case RETWEET_SUCCESS:\n            return{\n                ...state,\n                mainPosts: [ action.data, ...state.mainPosts ],\n            }\n        case RETWEET_FAILURE:\n            return{\n                ...state,\n            }\n        case REMOVE_POST_REQUEST:\n            return{\n                ...state,\n            }\n        case REMOVE_POST_SUCCESS:\n            return{\n                ...state,\n                mainPosts: state.mainPosts.filter(v => v.id !== action.data),\n            }\n        case REMOVE_POST_FAILURE:\n            return{\n                ...state,\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default PostReducer;"]},"metadata":{},"sourceType":"module"}