{"ast":null,"code":"import { all, fork, call, takeLatest, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_SUCCESS, LOAD_MAIN_POSTS_FAILURE, LOAD_USER_POSTS_SUCCESS } from '../reducers/post';\n\nfunction addPostAPI(postData) {\n  return axios.post('/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    console.log('addPostResult: ', result);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(3000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: action.error\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction loadMainPostAPI() {\n  return axios.get('/posts');\n}\n\nfunction* loadMainPost() {\n  try {\n    const result = yield call(loadMainPostAPI);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MAIN_POSTS_FAILURE,\n      error: err\n    });\n  }\n}\n\nfunction* watchLoadMainPost() {\n  yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchLoadMainPost)]);\n}","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/sagas/post.js"],"names":["all","fork","call","takeLatest","put","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_USER_POSTS_SUCCESS","addPostAPI","postData","post","withCredentials","addPost","action","result","data","console","log","type","err","error","watchAddPost","addCommentAPI","addComment","postId","watchAddComment","loadMainPostAPI","get","loadMainPost","watchLoadMainPost","postSaga"],"mappings":"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","sourcesContent":["import { all, fork, call, takeLatest, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, \n        ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n        LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_SUCCESS, LOAD_MAIN_POSTS_FAILURE, LOAD_USER_POSTS_SUCCESS, } from '../reducers/post';\n\nfunction addPostAPI(postData){\n    return axios.post('/post', postData, {\n        withCredentials: true,\n    })\n}\n\nfunction* addPost(action){\n    try{\n        const result = yield call(addPostAPI, action.data);\n        console.log('addPostResult: ', result)\n        yield put({\n            type: ADD_POST_SUCCESS,\n            data: result.data,\n        });\n    }catch(err){\n        console.error(err);\n        yield put({\n            type: ADD_POST_FAILURE,\n            error: err,\n        })\n    }\n}\n\nfunction* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST, addPost)\n}\n\nfunction* addCommentAPI(){\n    \n}\n\nfunction* addComment(action){\n    try{\n        yield delay(3000);\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n            data: {\n                postId: action.data.postId\n            }\n        })\n\n    }catch(err){\n        console.error(err);\n        yield put({\n            type: ADD_COMMENT_FAILURE,\n            error: action.error,\n        })\n    }\n}\n\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction loadMainPostAPI(){\n    return axios.get('/posts');\n}\n\nfunction* loadMainPost(){\n    try{\n        const result = yield call(loadMainPostAPI);\n        yield put({\n            type: LOAD_USER_POSTS_SUCCESS,\n            data: result.data,\n        })\n    }catch(err){\n        console.error(err);\n        yield put({\n            type: LOAD_MAIN_POSTS_FAILURE,\n            error: err,\n        })\n    }\n}\n\nfunction* watchLoadMainPost(){\n    yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPost);\n}\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment),\n        fork(watchLoadMainPost),\n    ])\n}"]},"metadata":{},"sourceType":"module"}