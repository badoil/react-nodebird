{"ast":null,"code":"import { all, put, call, takeLatest, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\n\nfunction* loginAPI() {}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield take(LOG_IN);\n  yield put({\n    type: LOG_IN_SUCCESS\n  });\n}\n\nexport default function* userSaga() {\n  yield all([call(watchLogin)]);\n}","map":{"version":3,"sources":["/Users/oil/Desktop/zerocho-react/nodebird/front/sagas/user.js"],"names":["all","put","call","takeLatest","take","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","loginAPI","login","type","err","console","error","watchLogin","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,IAArC,QAAiD,oBAAjD;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,cAAjC,QAAuD,kBAAvD;;AAGA,UAAUC,QAAV,GAAqB,CAEpB;;AAED,UAAUC,KAAV,GAAiB;AACb,MAAG;AACC,UAAMP,IAAI,CAACM,QAAD,CAAV;AACA,UAAMP,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAT;AAGH,GALD,CAKC,OAAMK,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,UAAMV,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAEH;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUO,UAAV,GAAsB;AAClB,QAAMV,IAAI,CAACC,MAAD,CAAV;AACA,QAAMJ,GAAG,CAAC;AACNS,IAAAA,IAAI,EAAEJ;AADA,GAAD,CAAT;AAGH;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMf,GAAG,CAAC,CACNE,IAAI,CAACY,UAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, put, call, takeLatest, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\n\n\nfunction* loginAPI() {\n    \n}\n\nfunction* login(){\n    try{\n        yield call(loginAPI);\n        yield put({\n            type: LOG_IN_SUCCESS\n        })\n    }catch(err){\n        console.error(err)\n        yield put({\n            type: LOG_IN_FAILURE,\n        })\n    }\n}\n\nfunction* watchLogin(){\n    yield take(LOG_IN)\n    yield put({\n        type: LOG_IN_SUCCESS\n    })\n}\n\nexport default function* userSaga() {\n    yield all([\n        call(watchLogin)\n    ])\n}"]},"metadata":{},"sourceType":"module"}